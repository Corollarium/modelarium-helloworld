<?php declare(strict_types=1);
/** 
 * This file was automatically generated by Modelarium on 2020-08-14T19:32:25+00:00
 */
namespace App\Models;

use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\HasOne;
use Illuminate\Database\Eloquent\Relations\MorphTo;
use Illuminate\Database\Eloquent\Relations\MorphToMany;
use Illuminate\Support\Facades\Auth;

/**
 * This file was automatically generated by Modelarium.
 */
abstract class BaseUser extends \Illuminate\Database\Eloquent\Model
{
    /**
     * The attributes that are mass assignable.
     * @var array
     */
    protected $fillable = ['name', 'password', 'email'];

    /**
     * The attributes that should be hidden for arrays.
     * @var array
     */
    protected $hidden = ['password', 'remember_token'];

    /**
     * The attributes that should be cast to native types.
     * @var array
     */
    protected $casts = ['email_verified_at' => 'datetime'];

    /**
     * @return array
     */
    public static function getFields(): array
    {
        return [
            'name' => [
                'name' => 'name',
                'datatype' => 'string',
                'validators' => ['required' => ['value' => true]],
                'renderable' => [],
            ],
            'password' => [
                'name' => 'password',
                'datatype' => 'string',
                'validators' => ['required' => ['value' => true]],
                'renderable' => [],
            ],
            'email_verified_at' => [
                'name' => 'email_verified_at',
                'datatype' => 'timestamp',
                'validators' => [],
                'renderable' => [],
            ],
            'email' => [
                'name' => 'email',
                'datatype' => 'email',
                'validators' => ['required' => ['value' => true]],
                'renderable' => [],
            ],
        ];
    }

    /**
     * @return \Formularium\Model
     */
    public static function getFormularium(): \Formularium\Model
    {
        $model = \Formularium\Model::create('User', static::getFields());
        return $model;
    }

    /**
     * @return array
     */
    public static function getRandomData(): array
    {
        $data = static::getFormularium()->getRandom();

        return $data;
    }

    /**
     * @return \Formularium\Model
     */
    public function getCanAttribute(): array
    {
        $policy = new \App\Policies\UserPolicy();
        $user = Auth::user();
        return [
            //[ "ability" => "create", "value" => $policy->create($user) ]
        ];
    }
}
